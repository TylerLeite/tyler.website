require('@babel/register');

const fs = require('fs');
const {promisify} = require('util');

const _ = require('lodash');

const Koa = require('koa');
const KoaRouter = require('koa-router');
const ejs = require('ejs');


const app = new Koa();
const router = new KoaRouter();

router.get('*', async (ctx, next) => {
  let url = ctx.request.url;

  if (!url.includes('.')) {
    url += '.ejs';
  }
  const urlparts = _.filter(url.split('/'), el => !!el);

  if (urlparts.length == 0) {
    urlparts.push('home.ejs');
  }

  let fileType, fileContents;
  for (let i = 0; i < urlparts.length; i++) {
    let test = './static/' + urlparts.slice(0, urlparts.length-i).join('/');
    if (fs.existsSync(test)) {
      [fileType, fileContents] = await getFile(test, urlparts.slice(urlparts.length-1));
      break;
    }
  }

  ctx.type = fileType;
  ctx.body = fileContents;
});

function getFileNameForUrl (url) {
  return url + '.ejs';
}

async function getFile (file, params) {
  let extension = file.split('.').pop();

  let data = fs.readFileSync(file);
  if (extension == 'ejs') {
    const context = await getDataForPage(file);
    extension = 'html';
    data = ejs.render(data.toString('utf8'), context);
  }

  return [extension, data];
}

async function getDataForPage (file) {
  file = file.split('/').pop().split('.')[0];
  if (file == 'writing') {
    return getDataForPage_writing();
  } else {
    return {};
  }
}

async function getDataForPage_writing() {
  const storyDir = './static/stories/';
  let stories = [];
  
  const readdir = promisify(fs.readdir);
  const filens = fs.readdirSync(storyDir);

  for (let i = 0; i < filens.length; i++) {
    filen = storyDir + filens[i];
    const content = fs.readFileSync(filen);
    stories.push({
      title: filens[i],
      slugTitle: filens[i].toLowerCase().split(' ').join('-'),
      content: content.toString('utf8').split('\n'),
    });
  }

  return {
    stories,
  }
}

app.use(async (ctx, next) => {
  await next();
  console.log(`${new Date()} ${ctx.method} ${ctx.url}`)
});

app.use(router.routes());
app.use(router.allowedMethods());

app.listen(42069);
