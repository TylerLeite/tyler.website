<html>
  <head>
    <title>Arcana</title>

    <link href="https://fonts.googleapis.com/css?family=Laila" rel="stylesheet">

    <style>
      html {background-color: #f9f9f9}
      form * {display: flex; margin: 0; padding: 0; font-family: 'Laila', 'Serif'; color: #303030}
      .flex-col, ul {flex-flow: column nowrap}

      input[type="text"], select {
        border: 0;
        border-bottom: 1px solid black;
        outline: none !important;
        font-size: 16px;
        padding-bottom: 5px;
        background: transparent;
      }

      input[type="text"], label + select {
        margin-left: 10px;
      }

      #species-infos, #school-descriptions {
        width: 700px;
        margin-left: 20px;
        margin-bottom: 10px;
      }

      li {
        margin-left: 31px;
        display: list-item;
      }

      .statskills label {
        align-items: flex-end;
        min-width: 80px;
      }

      .skill-name { min-width: 100px; }

      .statskills input[type="text"] {
        width: 33px;
        text-align: center;
        padding-right: 5px;
      }

      .statskills .field-wrap p {
        align-items: flex-end;
        margin-left: 5px;
        position: relative;
        top: 2px;
      }

      #skills-physical {margin-left: 25px}

      #species-description {margin-top: 5px}
      #skills, #stats, #species-wrap, #magic-school {margin-top: 10px}
      .stats-description {margin-left: 15px}
      .stat-name {font-weight: bold; text-decoration: underline; color: #000}
      #Combat-description {margin-bottom: 10px}
    </style>

    <script>
      if (window.location.hash.length == 0) {
        window.location.hash = Math.random().toString(27).slice(2);
      }

      let seed = parseInt(window.location.hash.slice(1), 27);
      function random (range=100) {
        seed = (1028597*seed + 488249) % 1737017;
        return seed % range;
      }

      const state = {};
      let spb = {Wisdom: 2, Fortitude: 2, Agility: 2, Perception: 2};
      function OnFormChange (key, value) {
        state[key] = value;

        // ajax request to send changes to server (autosave)
        httpRequest = new XMLHttpRequest();
        httpRequest.onreadystatechange = () => {
          console.log(arguments);
        };

        //httpRequest.open('POST', 'localhost:20394/')
        //httpRequest.setRequestHeader('Content-Type', 'application/json');
      }

      function OnSpeciesChange (event) {
        const desks = document.getElementById('species-infos').children;
        for (let i = 0; i < desks.length; i++) {
          if (desks[i].id == event.target.value + '-info') {
            desks[i].style.display = 'flex';
          } else {
            desks[i].style.display = 'none';
          }
        }
      }

      function OnStatChange (event, stat) {
        // update spb
        let n = Number(event.target.value);
        if (n < 10) { n = 1 }
        else if (n < 16) { n = 2 }
        else if (n < 26) { n = 3 }
        else { n = 4 }
        document.getElementById('spb-' + stat).innerHTML = `(+${n} skill points)`;
        spb[stat] = n

        // update stat points remaining
        pointsUsed = 0;
        pointsUsed += Number(document.getElementById('Wisdom').value);
        pointsUsed += Number(document.getElementById('Perception').value);
        pointsUsed += Number(document.getElementById('Fortitude').value);
        pointsUsed += Number(document.getElementById('Agility').value);
        document.getElementById('stat-points-remaining').innerHTML = `${50-pointsUsed} stat points remaining`;

        // update skill points
        _updateSkillPoints();
      }

      function _updateSkillPoints () {
        let psp = spb.Fortitude + spb.Agility;
        psp -= Number(document.getElementById('Dexterity').value);
        psp -= Number(document.getElementById('Strength').value);
        psp -= Number(document.getElementById('Acrobatics').value);
        psp -= Number(document.getElementById('Performance').value);
        psp -= Number(document.getElementById('Stamina').value);
        document.getElementById('sp-rem-physical').innerHTML = psp + ' physical skill points remaining';

        let msp = spb.Wisdom + spb.Perception;
        msp -= Number(document.getElementById('Social').value);
        msp -= Number(document.getElementById('Survival').value);
        msp -= Number(document.getElementById('First Aid').value);
        msp -= Number(document.getElementById('Knowledge').value);
        msp -= Number(document.getElementById('Engineering').value);
        document.getElementById('sp-rem-mental').innerHTML = msp + ' mental skill points remaining';
      }

      function OnSchoolChange (event) {
        schools = event.target.value.split('/');
        chillins = document.getElementById('school-descriptions').children;
        for (let i = 0; i < chillins.length; i++) {
          chillins[i].style.display = 'none';

          for (let j = 0; j < schools.length; j++) {
            if (chillins[i].id == schools[j] + '-description') {
              chillins[i].style.display = 'flex';
            }
          }
        }
      }
    </script>
  </head>

  <body>
    <form>
      <span class="field-wrap">
        <label for="name">Character Name:</label>
        <input type="text" name="name" id="name" />
      </span>

      <span class="field-wrap flex-col">
        <span><select id="magic-school" onchange="OnSchoolChange(event)">
          <option value="" selected>School of Magic</option>
          <option value="Combat/Evocation">Combat - Evocation</option>
          <option value="Combat/Restitution">Combat - Restitution</option>
          <option value="Combat/Illusion">Combat - Illusion</option>
          <option value="Summoning">Summoning</option>
          <option value="Enchantment">Enchantment</option>
        </select></span>

        <span class="flex-col" id="school-descriptions">
          <% for (let key in schools) { %>
            <p id="<%- key %>-description" style="display:none"><%- schools[key] %></p>
          <% } %>
        </span>
      </span>

      <span id="species-wrap" class="field-wrap flex-col">
        <span class="flex-row">
          <label for="species">Species:</label>
          <select name="species" id="species" onchange="OnSpeciesChange(event);">
            <option value="" selected>Choose Carefully</option>
            <% for (let i = 0; i < speciesNames.length; i++) { %>
              <option value="<%- speciesNames[i] %>"><%- speciesNames[i] %></option>
            <% } %>
          </select>
        </span>

        <div id="species-infos">
        <% for (let i = 0; i < speciesNames.length; i++) { %>
          <div id="<%- speciesNames[i] + '-info' %>" class="flex-col" style="display:none;">
            <p id="species-description"><%- species[speciesNames[i]].description %></p>
            <% if (species[speciesNames[i]].passiveAbilities.length > 0) { %>
              <p>Passive Abilities</p>
              <ul id="species-passives">
                <% for (let j = 0; j < species[speciesNames[i]].passiveAbilities.length; j++) { %>
                  <li><%- species[speciesNames[i]].passiveAbilities[j] %></li>
                <% } %>
              </ul>
            <% } %>

            <% if (species[speciesNames[i]].activeAbilities.length > 0) { %>
              <p>Active Abilities</p>
              <ul id="species-actives">
                <% for (let j = 0; j < species[speciesNames[i]].activeAbilities.length; j++) { %>
                  <li><%- species[speciesNames[i]].activeAbilities[j] %></li>
                <% } %>
              </ul>
            <% } %>
          </div>
        <% } %>
        </div>
      </span>

      <div id="stats" class=" statskills flex-col">
      <p id="stat-points-remaining">10 stat points remaining</p>
      <% for (let i = 0; i < statsNames.stats.length; i++) { %>
        <span class="field-wrap">
          <label class="stat-name" for="<%- statsNames.stats[i] %>"><%- statsNames.stats[i] %></label>
          <input type="text" name="<%- statsNames.stats[i] %>" id="<%-statsNames.stats[i] %>" value="10" onkeyup="OnStatChange(event, '<%- statsNames.stats[i] %>')"/>
          <p id="spb-<%- statsNames.stats[i] %>">(+2 skill points)</p>
        </span>
        <p class="stats-description"><%- stats.stats[statsNames.stats[i]].description %></p>
      <% } %>
      </div>

      <div id="skills" class="flex-row">
        <div id="skills-mental" class="statskills flex-col">
        <p id="sp-rem-mental">4 mental skill points remaining</p>
        <% for (let key in stats.skills) { if (stats.skills[key].type == 'mental') { %>
          <span class="field-wrap">
            <input onkeyup="_updateSkillPoints()" type="text" name="<%- key %>" id="<%- key %>" value="0"/>
            <label for="<%- key %>" title="<%- stats.skills[key].description %>"><p class="skill-name"><%- key %></p>(?)</label>
          </span>
        <% }} %>
        </div>

        <div id="skills-physical" class="statskills flex-col">
        <p id="sp-rem-physical">4 physical skill points remaining</p>
        <% for (let key in stats.skills) { if (stats.skills[key].type == 'physical') { %>
          <span class="field-wrap">
            <input onkeyup="_updateSkillPoints()" type="text" name="<%- key %>" id="<%- key %>" value="0"/>
            <label for="<%- key %>" title="<%- stats.skills[key].description %>"><p class="skill-name"><%- key %></p>(?)</label>
          </span>
        <% }} %>
        </div>
      </div>
    </form>
  </body>
</html>
